const int SWITCH_MODE_PIN = 3;
const int INC_SWITCH_PIN = 4;
const int DEC_SWITCH_PIN = 7;
const int LOOKUP_SWITCH_PIN = 8;
const int ledPin = 9;
bool switchMode = false; // initially not in switch mode
bool switchModePrevState = false; // previous state of switch mode switch
bool lookupSwitch = false; // initially not in normal mode
int value = 20; // initial value
char lookupTable[][2] = {
  {80, 50},
  {100, 80},
  {60, 40}
};

void setup() {
  Serial.begin(9600); // initialize serial communication
  pinMode(SWITCH_MODE_PIN, INPUT); // set switch mode pin as input with internal pull-up resistor
  pinMode(INC_SWITCH_PIN, INPUT); // set increment switch pin as input with internal pull-up resistor
  pinMode(DEC_SWITCH_PIN, INPUT); // set decrement switch pin as input with internal pull-up resistor
  pinMode(LOOKUP_SWITCH_PIN, INPUT); // set lookup switch pin as input with internal pull-up resistor
  pinMode(ledPin, OUTPUT);

}

void loop() {
  char receivedData = '\0';


 
  // check if switch mode switch is pressed and released
  bool switchModeState = digitalRead(SWITCH_MODE_PIN);

  delay(100);

 
  if (switchModeState != switchModePrevState && switchModeState == LOW) {
    switchMode = !switchMode; // toggle switch mode
    if (!switchMode) {
      // if exiting switch mode, reset value
      value = 20;
    }
  }
    switchModePrevState = switchModeState;

/*
if(digitalRead((SWITCH_MODE_PIN)==1&&(switchMode==0))){
  Serial.println("on");
  switchMode=1;
  delay(100);

  while(digitalRead(SWITCH_MODE_PIN)==1);
  }
  else if(digitalRead((SWITCH_MODE_PIN)==1&&(switchMode==1))) {
    
     Serial.println("off");
      switchMode=0;
  delay(100);

  while(digitalRead(SWITCH_MODE_PIN)==1);
    }
*/
  


  // check if lookup switch is on
  bool lookupSwitchState = digitalRead(LOOKUP_SWITCH_PIN);
  if (lookupSwitchState == HIGH) {
    digitalWrite(ledPin, HIGH);
    // if lookup switch is on, look up the incoming data in the table and send the corresponding value
    if (Serial.available() > 0) {
      receivedData = Serial.read(); // read the incoming data
      for (int i = 0; i < sizeof(lookupTable); i++) {
        if (lookupTable[i][0] == receivedData) {
          Serial.write((char)lookupTable[i][1]); // transmit the corresponding value in the table
          break;
        }
      }
    }
  } else {
    digitalWrite(ledPin, LOW);
    // if lookup switch is off, send incoming data as is
    if (Serial.available() > 0) {
      Serial.write((char)Serial.read());
    }
  }

  // check if switch mode is on
  if (switchMode) {

    digitalWrite(ledPin, HIGH);
    delay(500);
    digitalWrite(ledPin, LOW);
    delay(500);

    digitalWrite(ledPin, HIGH);
    delay(500);
    digitalWrite(ledPin, LOW);
    delay(500);



    
    while(digitalRead( SWITCH_MODE_PIN ) == HIGH)
    {
      delay(10);
    }
    delay(100);
    while(switchMode)
    {
    // if switch mode is on, increment or decrement value based on switch state
    if (digitalRead(INC_SWITCH_PIN) == HIGH) {
      value += 20;
      if (value > 100) {
        value = 20;
      }
      Serial.print((char)value);
      delay(1000);
      while(digitalRead( INC_SWITCH_PIN) == HIGH)
      {
        delay(10);
      }
      
    } else if (digitalRead(DEC_SWITCH_PIN) == HIGH) {
      value -= 20;
      if (value < 20) {
        value = 100;
      }
      Serial.print((char)value);
      delay(1000);
       while(digitalRead( DEC_SWITCH_PIN) == HIGH)
       {
        delay(10);
       }
    }
    else if(digitalRead( SWITCH_MODE_PIN ) == HIGH)
    {
      switchMode=0;

      while(digitalRead( SWITCH_MODE_PIN ) == HIGH)
      {
        delay(10);
      }
    }
    // send the current value
    Serial.print((char)value);
      delay(1000);
    //delay(100);
    }
  }
}
